"""
Django settings for djangovue project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.abspath(os.path.join(BASE_DIR,'..'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'kg20$r)&2y2egffb@ylhd3v=^q+@lurlsc@_271vg^!8r(ge(('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_js_error_hook',
    "webpack_loader",
    # "corsheaders",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangovue.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangovue.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
# Global Static Folder (were collectstatic will pull static files too)
STATIC_ROOT = os.path.abspath(os.path.join(PROJECT_ROOT, 'collected_assets'))
# Local static files
STATICFILES_DIRS = [
    os.path.abspath(os.path.join(PROJECT_ROOT, 'assets')),
]
# where uploaded media lives
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# 3rd Party App Settings
# BUNDLE_DIR_NAME == path to build folder.
WEBPACK_LOADER = {
    'DEFAULT': {
            "CACHE": not DEBUG,
            # This must match the public path in webpack
            'BUNDLE_DIR_NAME': 'static/dist/',
            # Points to webpack stats json file.
            'STATS_FILE': os.path.join(PROJECT_ROOT, 'webpack-stats.json'),
        }
}

# CORS PLUGIN
# CORS_ORIGIN_WHITELIST = ['localhost:3000', ]

#Email Backend
EMAIL_BACKEND = 'common.emailbackend.SEREmailBackend'
# SERVER_EMAIL = ''
# DEFAULT_FROM_EMAIL = SERVER_EMAIL
# ADMINS = (('admin', 'admin@example.com'),)


# EMAIL_HOST_USER = 'admin@example.com'
# EMAIL_HOST_PASSWORD = 'password' 
# EMAIL_HOST = 'smtp.example.com'
# EMAIL_PORT = 587
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_USE_TLS = True

#Logging
# Use Django JS Error to pass errors from vue to django.
if not DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
            'handlers': {
                    'mail_admins': {
                            'level': 'INFO',
                            'class': 'django.utils.log.AdminEmailHandler',
                            'include_html': True,
                            'email_backend': EMAIL_BACKEND,
                    },
                    'console': {
                        'level': 'DEBUG',
                        'class': 'logging.StreamHandler',
                        # 'formatter': 'simple'
                    },                  
            },
            'loggers': {
                    'django': {
                            'handlers': ['mail_admins'],
                            'level': 'INFO',
                            'propagate': True,
                    },
                    'javascript_error': {
                        'handlers': ['mail_admins'],
                        'level': 'ERROR',
                        'propagate': True,
                    },                  
            },
    }

